{"version":3,"sources":["queries/GetQueries.js","components/ShowBookDetails.jsx","components/Books.jsx","components/AddBook.jsx","components/AddAuthor.jsx","App.jsx","index.js"],"names":["GET_BOOKS","gql","GET_BOOK","GET_AUTHORS","ADD_BOOK","ADD_AUTHOR","ShowBookDetails","bookID","useQuery","variables","id","loading","data","className","book","name","genre","author","books","map","Books","error","useState","setBookID","message","onClick","AddBook","bookName","setBookName","setGenre","authorID","setAuthorID","useMutation","addBook","onSubmit","evt","preventDefault","refetchQueries","query","err","alert","htmlFor","type","value","required","onChange","target","authors","AddAuthor","addAuthor","authorName","setAuthorName","authorAge","setAuthorAge","age","parseInt","window","App","client","ApolloClient","uri","cache","InMemoryCache","ReactDOM","render","StrictMode","ApolloProvider","document","getElementById"],"mappings":"kPAEaA,EAAYC,YAAH,oJAaTC,EAAWD,YAAH,4OAgBRE,EAAcF,YAAH,oGASXG,EAAWH,YAAH,4LAQRI,EAAaJ,YAAH,iJ,OCQRK,EArDS,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAAa,EACZC,YAASN,EAAU,CAC3CO,UAAW,CAAEC,GAAIH,KADXI,EAD8B,EAC9BA,QAASC,EADqB,EACrBA,KAIjB,OAAKA,GAAQD,EAET,mBAAGE,UAAU,iEAAb,kCAMCD,EASH,sBAAKC,UAAU,iCAAf,UACE,gCACE,oBAAIA,UAAU,wCAAd,SACGD,EAAKE,KAAKC,OAEb,uBAAOF,UAAU,8EAAjB,SACGD,EAAKE,KAAKE,WAGf,4BAAYH,UAAU,uDAAtB,SACGD,EAAKE,KAAKG,OAAOF,OAEpB,gCACE,qBAAIF,UAAU,0BAAd,gCACsBD,EAAKE,KAAKG,OAAOF,QAEvC,oBAAIF,UAAU,OAAd,SACGD,EAAKE,KAAKG,OAAOC,MAAMC,KAAI,SAACL,GAAD,OAC1B,oBAEED,UAAU,qDAFZ,SAIGC,EAAKC,MAHDD,EAAKJ,eA1BlB,mBAAGG,UAAU,8DAAb,iCCgBSO,EA7BD,WAAO,IAAD,EACeZ,YAASR,GAAlCW,EADU,EACVA,QAASU,EADC,EACDA,MAAOT,EADN,EACMA,KADN,EAEUU,mBAAS,MAFnB,mBAEXf,EAFW,KAEHgB,EAFG,KAIlB,OAAIZ,EAAgB,cAChBU,EAAa,UAAN,OAAiBA,EAAMG,SAGhC,sBAAKX,UAAU,mBAAf,UACE,qBAAKA,UAAU,qBAAf,SACE,oBAAIA,UAAU,yBAAd,SACGD,EAAKM,MAAMC,KAAI,SAACL,GAAD,OACd,oBACED,UAAU,0GAEVY,QAAS,kBAAMF,EAAUT,EAAKJ,KAHhC,SAKGI,EAAKC,MAHDD,EAAKJ,WASlB,8BACE,cAAC,EAAD,CAAiBH,OAAQA,U,QCiElBmB,EA1FC,WAAO,IAAD,EACYJ,mBAAS,IADrB,mBACbK,EADa,KACHC,EADG,OAEMN,mBAAS,IAFf,mBAEbN,EAFa,KAENa,EAFM,OAGYP,mBAAS,IAHrB,mBAGbQ,EAHa,KAGHC,EAHG,OAIavB,YAASL,GAAlCQ,EAJY,EAIZA,QAASU,EAJG,EAIHA,MAAOT,EAJJ,EAIIA,KAJJ,EAKFoB,YAAY5B,GAAvB6B,EALa,oBAOpB,GAAIZ,EAAO,OAAO,8BAAMA,EAAMG,UAiB9B,OACE,uBAAMU,SAhBa,SAACC,GACpBA,EAAIC,iBACJ,IACEH,EAAQ,CACNxB,UAAW,CAAEM,KAAMY,EAAUX,MAAOA,EAAOc,SAAUA,GACrDO,eAAgB,CAAC,CAAEC,MAAOtC,MAE5B,MAAOuC,GACPC,MAAM,iCAAkCD,EAAIf,SAG9CI,EAAY,IACZC,EAAS,IACTE,EAAY,KAGZ,UACE,sBAAKlB,UAAU,oCAAf,UACE,uBAAOA,UAAU,4BAA4B4B,QAAQ,WAArD,uBAGA,uBACE5B,UAAU,iCACV6B,KAAK,OACL3B,KAAK,WACLL,GAAG,WACHiC,MAAOhB,EACPiB,UAAQ,EACRC,SAAU,SAACV,GAAD,OAASP,EAAYO,EAAIW,OAAOH,aAG9C,sBAAK9B,UAAU,oCAAf,UACE,uBAAOA,UAAU,6BAA6B4B,QAAQ,YAAtD,mBAGA,uBACE5B,UAAU,iCACV6B,KAAK,OACL3B,KAAK,YACLL,GAAG,YACHiC,MAAO3B,EACP4B,UAAQ,EACRC,SAAU,SAACV,GAAD,OAASN,EAASM,EAAIW,OAAOH,aAG3C,sBAAK9B,UAAU,oCAAf,UACE,uBAAOA,UAAU,4BAA4B4B,QAAQ,SAArD,oBAGA,yBACE5B,UAAU,6DACVE,KAAK,SACLL,GAAG,SACHiC,MAAOb,EACPc,UAAQ,EACRC,SAAU,SAACV,GAAD,OAASJ,EAAYI,EAAIW,OAAOH,QAN5C,UAQE,wBAAQA,MAAM,GAAG9B,UAAU,yCAA3B,2BAGCF,EACC,0DAEAC,EAAKmC,QAAQ5B,KAAI,SAACF,GAAD,OACf,wBAAwB0B,MAAO1B,EAAOP,GAAtC,SACGO,EAAOF,MADGE,EAAOP,aAO5B,wBACEgC,KAAK,SACL7B,UAAU,6GAFZ,mBCtBSmC,EA1DG,WAAO,IAAD,EACFhB,YAAY3B,GAAzB4C,EADe,sBAEc3B,mBAAS,IAFvB,mBAEf4B,EAFe,KAEHC,EAFG,OAGY7B,mBAAS,GAHrB,mBAGf8B,EAHe,KAGJC,EAHI,KAmBtB,OACE,uBAAMnB,SAfa,SAACC,GACpBA,EAAIC,iBACJ,IACEa,EAAU,CACRxC,UAAW,CAAEM,KAAMmC,EAAYI,IAAKC,SAASH,IAC7Cf,eAAgB,CAAC,CAAEC,MAAOnC,MAE5B,MAAOkB,GACPmC,OAAOhB,MAAM,sCAAuCnB,EAAMG,SAE5D2B,EAAc,IACdE,EAAa,IAIb,UACE,sBAAKxC,UAAU,oCAAf,UACE,uBAAOA,UAAU,4BAA4B4B,QAAQ,aAArD,yBAGA,uBACE5B,UAAU,iCACV6B,KAAK,OACL3B,KAAK,aACLL,GAAG,aACHkC,UAAQ,EACRD,MAAOO,EACPL,SAAU,SAACV,GAAD,OAASgB,EAAchB,EAAIW,OAAOH,aAGhD,sBAAK9B,UAAU,oCAAf,UACE,uBAAOA,UAAU,4BAA4B4B,QAAQ,YAArD,wBAGA,uBACE5B,UAAU,iCACV6B,KAAK,SACL3B,KAAK,WACLL,GAAG,YACHiC,MAAOS,EACPP,SAAU,SAACV,GAAD,OAASkB,EAAalB,EAAIW,OAAOH,aAG/C,wBACE9B,UAAU,6GACV6B,KAAK,SAFP,mBCxBSe,EAxBH,WACV,OACE,sBAAK5C,UAAU,4BAAf,UACE,wBAAQA,UAAU,kBAAlB,SACE,oBAAIA,UAAU,+CAAd,0BAIF,uBAAMA,UAAU,+BAAhB,UACE,yBAASA,UAAU,aAAnB,SACE,cAAC,EAAD,MAEF,sBAAKA,UAAU,+GAAf,UACE,yBAASA,UAAU,GAAnB,SACE,cAAC,EAAD,MAEF,kCACE,cAAC,EAAD,gBCfN6C,EAAS,IAAIC,IAAa,CAC9BC,IAAK,6DACLC,MAAO,IAAIC,MAGbC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACC,EAAA,EAAD,CAAgBR,OAAQA,EAAxB,SACE,cAAC,EAAD,QAGJS,SAASC,eAAe,W","file":"static/js/main.3da68121.chunk.js","sourcesContent":["import { gql } from \"@apollo/client\";\n\nexport const GET_BOOKS = gql`\n  query GET_BOOKS {\n    books {\n      name\n      genre\n      id\n      author {\n        name\n      }\n    }\n  }\n`;\n\nexport const GET_BOOK = gql`\n  query GET_BOOK_WITH_AUTHOR_WITH_BOOKS($id: ID!) {\n    book(id: $id) {\n      name\n      genre\n      author {\n        name\n        books {\n          id\n          name\n        }\n      }\n    }\n  }\n`;\n\nexport const GET_AUTHORS = gql`\n  query GET_AUTHORS {\n    authors {\n      id\n      name\n    }\n  }\n`;\n\nexport const ADD_BOOK = gql`\n  mutation ADD_BOOK($name: String!, $genre: String!, $authorID: ID!) {\n    addBook(name: $name, genre: $genre, authorID: $authorID) {\n      name\n    }\n  }\n`;\n\nexport const ADD_AUTHOR = gql`\n  mutation ADD_AUTHOR($name: String!, $age: Int) {\n    addAuthor(name: $name, age: $age) {\n      name\n    }\n  }\n`;\n","import { useQuery } from \"@apollo/client\";\nimport { GET_BOOK } from \"../queries/GetQueries\";\n\nconst ShowBookDetails = ({ bookID }) => {\n  const { loading, data } = useQuery(GET_BOOK, {\n    variables: { id: bookID },\n  });\n\n  if (!data && loading) {\n    return (\n      <p className=\"text-center mt-4 text-yellow-600 p-4 uppercase tracking-widest\">\n        Loading Book Details\n      </p>\n    );\n  }\n\n  if (!data) {\n    return (\n      <p className=\"text-center mt-4 text-red-600 p-4 uppercase tracking-widest\">\n        No Book Select Yet\n      </p>\n    );\n  }\n\n  return (\n    <div className=\"bg-purple-100 p-4 min-h-screen\">\n      <div>\n        <h3 className=\"text-2xl text-purple-900 inline-block\">\n          {data.book.name}\n        </h3>\n        <small className=\"text-xs bg-red-200 px-2 py-1 rounded-3xl font-bold text-red-700 inline ml-2\">\n          {data.book.genre}\n        </small>\n      </div>\n      <blockquote className=\"text-pink-600 pb-2 border-b-2 border-purple-200 mb-2\">\n        {data.book.author.name}\n      </blockquote>\n      <div>\n        <h4 className=\"text-lg text-purple-500\">\n          Other Books by the {data.book.author.name}\n        </h4>\n        <ul className=\"my-2\">\n          {data.book.author.books.map((book) => (\n            <li\n              key={book.id}\n              className=\"text-base text-gray-800 list-inside list-disc py-1\"\n            >\n              {book.name}\n            </li>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default ShowBookDetails;\n","import { useQuery } from \"@apollo/client\";\nimport { GET_BOOKS } from \"../queries/GetQueries\";\nimport { useState } from \"react\";\nimport ShowBookDetails from \"./ShowBookDetails\";\n\nconst Books = () => {\n  const { loading, error, data } = useQuery(GET_BOOKS);\n  const [bookID, setBookID] = useState(null);\n\n  if (loading) return \"Loading....\";\n  if (error) return `Error: ${error.message}`;\n\n  return (\n    <div className=\"grid grid-cols-2\">\n      <div className=\"min-w-96 my-4 px-2\">\n        <ul className=\"grid grid-cols-2 gap-4\">\n          {data.books.map((book) => (\n            <li\n              className=\"bg-blue-200 text-blue-900 p-2 border-b-4 border-r-4 border-blue-400 shadow-sm rounded-sm cursor-pointer\"\n              key={book.id}\n              onClick={() => setBookID(book.id)}\n            >\n              {book.name}\n            </li>\n          ))}\n        </ul>\n      </div>\n\n      <div>\n        <ShowBookDetails bookID={bookID} />\n      </div>\n    </div>\n  );\n};\nexport default Books;\n","import { useState } from \"react\";\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { GET_AUTHORS, ADD_BOOK, GET_BOOKS } from \"../queries/GetQueries\";\n\nconst AddBook = () => {\n  const [bookName, setBookName] = useState(\"\");\n  const [genre, setGenre] = useState(\"\");\n  const [authorID, setAuthorID] = useState(\"\");\n  const { loading, error, data } = useQuery(GET_AUTHORS);\n  const [addBook] = useMutation(ADD_BOOK);\n\n  if (error) return <pre>{error.message}</pre>;\n\n  const handleSubmit = (evt) => {\n    evt.preventDefault();\n    try {\n      addBook({\n        variables: { name: bookName, genre: genre, authorID: authorID },\n        refetchQueries: [{ query: GET_BOOKS }],\n      });\n    } catch (err) {\n      alert(\"Please fill all data correctly\", err.message);\n    }\n\n    setBookName(\"\");\n    setGenre(\"\");\n    setAuthorID(\"\");\n  };\n  return (\n    <form onSubmit={handleSubmit}>\n      <div className=\"flex justify-between items-center\">\n        <label className=\"text-gray-700 text-sm p-2\" htmlFor=\"bookName\">\n          Book Name\n        </label>\n        <input\n          className=\"bg-blue-100 px-2 text-blue-900\"\n          type=\"text\"\n          name=\"bookName\"\n          id=\"bookName\"\n          value={bookName}\n          required\n          onChange={(evt) => setBookName(evt.target.value)}\n        />\n      </div>\n      <div className=\"flex justify-between items-center\">\n        <label className=\"text-gray-700 text-sm  p-2\" htmlFor=\"genreName\">\n          Genre\n        </label>\n        <input\n          className=\"bg-blue-100 px-2 text-blue-900\"\n          type=\"text\"\n          name=\"genreName\"\n          id=\"genreName\"\n          value={genre}\n          required\n          onChange={(evt) => setGenre(evt.target.value)}\n        />\n      </div>\n      <div className=\"flex justify-between items-center\">\n        <label className=\"text-gray-700 text-sm p-2\" htmlFor=\"author\">\n          Author\n        </label>\n        <select\n          className=\"bg-gray-100 text-gray-800 border-2 border-gray-600 rounded\"\n          name=\"author\"\n          id=\"author\"\n          value={authorID}\n          required\n          onChange={(evt) => setAuthorID(evt.target.value)}\n        >\n          <option value=\"\" className=\"bg-red-300 text-red-800 tracking-wider\">\n            Select Author\n          </option>\n          {loading ? (\n            <option>Loading Authors Data</option>\n          ) : (\n            data.authors.map((author) => (\n              <option key={author.id} value={author.id}>\n                {author.name}\n              </option>\n            ))\n          )}\n        </select>\n      </div>\n      <button\n        type=\"submit\"\n        className=\"bg-green-600 w-10 h-10 text-2xl text-green-100 rounded-full border-b border-l-4 border-green-700 shadow-lg\"\n      >\n        +\n      </button>\n    </form>\n  );\n};\n\nexport default AddBook;\n","import { useState } from \"react\";\nimport { useMutation } from \"@apollo/client\";\nimport { ADD_AUTHOR, GET_AUTHORS } from \"../queries/GetQueries\";\n\nconst AddAuthor = () => {\n  const [addAuthor] = useMutation(ADD_AUTHOR);\n  const [authorName, setAuthorName] = useState(\"\");\n  const [authorAge, setAuthorAge] = useState(0);\n\n  const handleSubmit = (evt) => {\n    evt.preventDefault();\n    try {\n      addAuthor({\n        variables: { name: authorName, age: parseInt(authorAge) },\n        refetchQueries: [{ query: GET_AUTHORS }],\n      });\n    } catch (error) {\n      window.alert(\"Please fill out all info correctly\", +error.message);\n    }\n    setAuthorName(\"\");\n    setAuthorAge(0);\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <div className=\"flex justify-between items-center\">\n        <label className=\"text-gray-700 text-sm p-2\" htmlFor=\"authorName\">\n          Author Name\n        </label>\n        <input\n          className=\"bg-blue-100 px-2 text-blue-900\"\n          type=\"text\"\n          name=\"authorName\"\n          id=\"authorName\"\n          required\n          value={authorName}\n          onChange={(evt) => setAuthorName(evt.target.value)}\n        />\n      </div>\n      <div className=\"flex justify-between items-center\">\n        <label className=\"text-gray-700 text-sm p-2\" htmlFor=\"authorAge\">\n          Author Age\n        </label>\n        <input\n          className=\"bg-blue-100 px-2 text-blue-900\"\n          type=\"number\"\n          name=\"authoAge\"\n          id=\"authorAge\"\n          value={authorAge}\n          onChange={(evt) => setAuthorAge(evt.target.value)}\n        />\n      </div>\n      <button\n        className=\"bg-green-600 w-10 h-10 text-2xl text-green-100 rounded-full border-b border-l-4 border-green-700 shadow-lg\"\n        type=\"submit\"\n      >\n        +\n      </button>\n    </form>\n  );\n};\n\nexport default AddAuthor;\n","import Books from \"./components/Books\";\nimport AddBook from \"./components/AddBook\";\nimport AddAuthor from \"./components/AddAuthor\";\n\nconst App = () => {\n  return (\n    <div className=\"bg-gray-100  min-h-screen\">\n      <header className=\"bg-gray-900 p-4\">\n        <h1 className=\"text-gray-200 text-2xl uppercase text-center\">\n          Book Store\n        </h1>\n      </header>\n      <main className=\"grid grid-cols-2 grid-rows-2\">\n        <section className=\"col-span-2\">\n          <Books />\n        </section>\n        <div className=\"w-screen fixed left-0 bottom-0 flex justify-between items-center  bg-gray-100 p-4 border-t-2 border-gray-300\">\n          <section className=\"\">\n            <AddBook />\n          </section>\n          <section>\n            <AddAuthor />\n          </section>\n        </div>\n      </main>\n    </div>\n  );\n};\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { ApolloClient, ApolloProvider, InMemoryCache } from \"@apollo/client\";\nimport App from \"./App\";\n\nconst client = new ApolloClient({\n  uri: \"http://touhidulshawan-books-rest-api.herokuapp.com/graphql\",\n  cache: new InMemoryCache(),\n});\n\nReactDOM.render(\n  <React.StrictMode>\n    <ApolloProvider client={client}>\n      <App />\n    </ApolloProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}